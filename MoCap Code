%% BMEN E3810: Biomedical Engineering Laboratory I (Motion Capture)
%  Written by: Dr . Lauren N . Heckelman
%  Fall 2023

%% Initialize the Workspace:
clear; clc; close all;

%% Load Video:
vidObj = VideoReader('mocapmovie2.mov'); % Be sure to set the proper filename!

allFrames = read(vidObj);
FrameRate = vidObj . FrameRate; % Frames acquired per second

    flexionAngles = zeros(1,size(allFrames, 4));
    RedCentroids = zeros(2,size(allFrames, 4));
    YellowCentroids = zeros(2,size(allFrames, 4));
    BlueCentroids = zeros(2,size(allFrames, 4));
    
    
    

% View first frame of your video:
for n = 1:size(allFrames, 4)
  
        Frame1 = allFrames(:,:,:,n);
        %figure; clf;
        %imshow(Frame1);

        Blue = Frame1(:,:,1)>5 & Frame1(:,:,1)<15 & Frame1(:,:,2)<70 & Frame1(:,:,2)>65 & Frame1(:,:,3)<120 &Frame1(:,:,3)>100;
        Yellow = Frame1(:,:,1)>200 & Frame1(:,:,1)<230 & Frame1(:,:,2)<200 & Frame1(:,:,2)>165 & Frame1(:,:,3)<40 & Frame1(:,:,3)>30;
        Red = Frame1(:,:,1)>100 & Frame1(:,:,2)<40 & Frame1(:,:,3)<40;
       
        [BlueCentroids(1,n), BlueCentroids(2,n)] = findCentroid(Blue);
        
        
        [YellowCentroids(1,n), YellowCentroids(2,n)] = findCentroid(Yellow);
        
        
        [RedCentroids(1,n), RedCentroids(2,n)] = findCentroid(Red);
        

    
        CentroidsX = [BlueCentroids(1,n),YellowCentroids(1,n),RedCentroids(1,n)];
        CentroidsY = [BlueCentroids(2,n),YellowCentroids(2,n),RedCentroids(2,n)];

        flexionAngles(1,n)=calculateFlexionAngle(CentroidsX, CentroidsY); 
      
       

        timeallframes = [Frame1*(1/30.01)];


end 


%% Data Analysis:
    % 1. Set appropriate thresholds to identify color markers here
    %[R G B]
    %Blue - [30-60 95-135 140-190]
    %Yellow - [200-250 170-200 0-2]
    %Red - [158-160 0-2 27-31]
    %saveas(figure(1), "bin_image.jpeg");
 
  
       

%% Data Visualization
    % 1. Plot Centroid Locations Throughout Motion
    figure(1);
    plot(BlueCentroids(1,:), BlueCentroids(2,:), 'b.');
    hold on
    plot(YellowCentroids(1,:), YellowCentroids(2,:), 'y.');
    plot(RedCentroids(1,:), RedCentroids(2,:), 'r.');
    hold off
    axis equal
    title("Position of X Centroid versus Position of Y Centroid")
    xlabel("X Centroid Position")
    ylabel("Y Centroid Position")
    set(gca, 'YDir','reverse')

    
% 2. Plot Flexion Angle vs . Time
    % time = FrameRate
    %ex. frame rate = 30 frames per sec, then frame * 1/30 would give you
    %time, save a time array based on all these values, plot this time
    %versus the flexion angles 
   
    plot(timeallframes, flexionAngles)

%% Helper Functions:

function [centroidX, centroidY] = findCentroid(IM_bw)
    % Note: IM_bw must be a 2D binary image
   
    mask = sum(IM_bw(:)); %mask/background of image
   
    
     
    centroidX = sum(sum((1:size(IM_bw,2)).*IM_bw))/mask;
    centroidY = sum(sum((1:size(IM_bw,1))'.*IM_bw))/mask;
   

end

function flexionAngle = calculateFlexionAngle(centroidsX, centroidsY)
    %make centroidsx and centroidsy matrices with red, yellow, blue
    a = [centroidsX(1)-centroidsX(2), centroidsY(1)-centroidsY(2)];
    b = [centroidsX(2)-centroidsX(3), centroidsY(2)-centroidsY(3)];
    flexionAngle = acosd(dot(a,b)/(norm(a)*norm(b)));

    % a = centroid_blue - centroid_yellow;
    % b = centroid_red - centroid_yellow;
    % angle = acosd(dot(a,b)/(norm(a)*norm(b)));
end
